# 6. Реализовать два небольших скрипта:
# а) итератор, генерирующий целые числа, начиная с указанного,
# б) итератор, повторяющий элементы некоторого списка, определенного заранее.
# Подсказка: использовать функцию count() и cycle() модуля itertools. Обратите внимание,
# что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.
# Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
#     Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
from itertools import *

def iter_count(index): #задача имеет не очень коректную задачу. Про итераторы ничего не рассказывалось. Поидеи, это генератор написать
    ter=iter(count(index)) #Если задача состоит в том, что бы применить count() и cycle(). То так и нужно было бы написать. Потому что это не итератор реализовать.
    c=0                     #И собственно, слишком легкая задача для номера 6
    while True:
        if c<5:
            c+=1
            yield next(ter)
        else:
            break
def iter_repeat(list):
    ter=iter(cycle(list))
    c=0
    while True:
        if c<5:
            c+=1
            yield next(ter)
        else:
            break

for j in iter_count(7):
    print((j))
for j in iter_repeat("abc"):
    print((j))
